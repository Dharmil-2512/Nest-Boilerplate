var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.412,1,1.412]],["body/modules/AppModule.html",[0,1.58,1,1.58,2,1.087,3,0.879,4,0.879,5,0.456,6,1.789,7,1.753,8,0.082,9,3.062,10,2.6,11,2.6,12,0.879,13,2.6,14,2.6,15,2.6,16,1.366,17,1.277,18,1.789,19,1.789,20,1.277,21,1.789,22,1.087,23,1.366,24,1.087,25,1.789,26,1.789,27,1.789,28,1.366,29,3.062,30,2.6,31,1.789,32,1.985,33,1.789,34,1.366,35,1.789,36,1.789,37,1.087,38,1.789,39,1.789,40,0.879,41,1.789,42,1.789,43,0.879,44,0.352,45,0.047,46,0.047]],["title/classes/GlobalExceptionFilter.html",[20,1.141,44,0.457]],["body/classes/GlobalExceptionFilter.html",[3,0.712,4,0.712,5,0.369,7,1.326,8,0.08,12,0.712,20,1.091,22,2.351,23,1.696,37,1.641,40,1.487,43,0.712,44,0.285,45,0.04,46,0.04,47,0.881,48,2.061,49,1.106,50,0.867,51,2.221,52,1.696,53,2.7,54,0.465,55,1.349,56,3.443,57,2.7,58,1.349,59,1.449,60,2.221,61,1.983,62,3.027,63,3.027,64,1.449,65,1.349,66,2.178,67,0.881,68,0.881,69,0.577,70,0.881,71,1.091,72,2.221,73,1.449,74,0.881,75,0.712,76,1.449,77,1.106,78,1.349,79,1.449,80,1.449,81,1.449,82,1.449,83,1.696,84,1.449,85,1.449,86,2.221,87,1.449,88,1.449,89,1.449]],["title/classes/ResponseHandler.html",[44,0.457,75,1.141]],["body/classes/ResponseHandler.html",[3,0.576,4,0.576,5,0.299,7,0.576,8,0.081,34,0.895,40,0.924,43,0.576,44,0.231,45,0.034,46,0.034,47,0.713,50,1.062,54,0.376,55,1.143,58,1.143,61,2.09,66,1.914,67,1.638,68,1.143,69,1.074,70,1.143,71,1.324,75,0.924,77,2.404,78,1.914,83,2.779,90,1.798,91,0.895,92,1.881,93,1.143,94,3.149,95,2.695,96,1.881,97,3.439,98,3.64,99,2.892,100,3.149,101,1.173,102,2.253,103,1.881,104,1.173,105,2.951,106,1.173,107,1.881,108,1.436,109,1.173]],["title/injectables/ResponseInterceptorService.html",[17,1.141,110,1.141]],["body/injectables/ResponseInterceptorService.html",[3,0.752,4,0.752,5,0.39,7,1.53,8,0.081,12,0.752,17,1.138,37,0.931,40,1.138,43,0.752,44,0.301,45,0.042,46,0.042,50,1.074,52,1.169,54,0.492,55,1.407,58,0.931,65,1.407,66,2.286,67,0.931,68,0.931,69,0.61,70,0.931,71,1.138,74,0.931,78,1.407,102,1.768,108,1.768,110,1.138,111,1.531,112,1.768,113,1.169,114,2.316,115,2.316,116,2.316,117,2.316,118,3.114,119,3.114,120,3.114,121,1.531,122,2.316,123,2.316,124,2.793,125,1.768,126,2.316,127,1.531,128,1.169,129,1.531,130,1.531,131,1.531,132,1.531,133,1.531,134,1.531,135,1.531]],["title/coverage.html",[136,2.382]],["body/coverage.html",[5,0.592,8,0.076,17,1.141,20,1.141,22,1.411,24,1.411,32,1.773,44,0.614,45,0.057,46,0.057,48,1.773,49,1.773,69,0.925,75,1.141,90,1.773,91,1.773,93,1.411,110,1.141,112,1.773,113,1.773,136,1.773,137,2.323,138,2.323,139,2.323,140,1.773,141,3.12,142,1.773,143,3.929,144,3.523,145,1.773,146,2.323,147,2.323,148,2.323,149,1.773,150,1.411,151,2.323,152,2.323,153,2.323]],["title/dependencies.html",[154,1.5,155,1.69]],["body/dependencies.html",[8,0.08,12,1.326,16,2.06,44,0.531,45,0.063,46,0.063,74,2.091,128,2.06,155,1.64,156,3.442,157,2.698,158,2.698,159,2.698,160,2.698,161,2.698,162,2.698,163,2.698,164,2.698,165,2.698,166,2.698,167,2.698]],["title/miscellaneous/functions.html",[168,0.966,169,2.123]],["body/miscellaneous/functions.html",[5,0.757,8,0.072,45,0.066,46,0.066,50,0.954,54,0.954,71,1.46,125,2.27,149,2.27,150,2.407,168,1.46,169,2.27,170,2.973,171,2.973,172,2.27,173,2.973]],["title/index.html",[54,0.631,174,1.965,175,1.965]],["body/index.html",[8,0.072,45,0.072,46,0.072,172,2.575,176,3.373]],["title/modules.html",[2,1.896]],["body/modules.html",[1,1.992,2,1.992,8,0.07,45,0.07,46,0.07,177,3.279,178,3.279,179,3.279]],["title/overview.html",[180,2.382]],["body/overview.html",[0,2.199,8,0.066,28,2.232,45,0.066,46,0.066,47,1.776,110,1.436,150,1.776,155,1.776,180,2.232,181,2.923,182,2.923,183,2.923,184,3.619,185,2.923,186,2.923,187,3.619,188,2.923]],["title/properties.html",[154,1.5,189,2.123]],["body/properties.html",[8,0.079,45,0.068,46,0.068,50,0.996,189,2.37,190,3.104,191,3.104,192,3.104,193,3.104,194,3.104]],["title/miscellaneous/variables.html",[168,0.966,195,2.123]],["body/miscellaneous/variables.html",[5,0.638,8,0.078,24,1.993,45,0.06,46,0.06,50,1.053,54,0.804,61,1.993,65,1.522,69,0.998,93,1.522,99,1.913,140,1.913,142,2.505,145,1.913,168,1.231,195,1.913,196,2.505,197,2.505,198,2.505,199,3.281,200,3.281,201,2.505,202,2.505,203,2.505,204,2.505,205,2.505,206,2.505]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":191,"title":{},"body":{"properties.html":{}}}],["0.1.14",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":187,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":144,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":143,"title":{},"body":{"coverage.html":{}}}],["16.3.1",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":188,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":147,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["4.18.2",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["app_filter",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":14,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["argumentshost",{"_index":63,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["author",{"_index":194,"title":{},"body":{"properties.html":{}}}],["available",{"_index":178,"title":{},"body":{"modules.html":{}}}],["badrequestexception",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["boilerplate",{"_index":176,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":150,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":179,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":120,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["catch",{"_index":56,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["catch(exception",{"_index":60,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["change",{"_index":122,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["class",{"_index":44,"title":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{}},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":47,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"overview.html":{}}}],["common",{"_index":65,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/ResponseInterceptorService.html":{},"miscellaneous/variables.html":{}}}],["common/configs/messages.config",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["common/global",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/response",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["common/types",{"_index":106,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["commonresponse",{"_index":102,"title":{},"body":{"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["const",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/ResponseInterceptorService.html":{}}}],["constant",{"_index":203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["context",{"_index":123,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["context.switchtohttp().getresponse",{"_index":130,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["controllers",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":136,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ctx",{"_index":79,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":81,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["data",{"_index":105,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["declarations",{"_index":182,"title":{},"body":{"overview.html":{}}}],["default",{"_index":199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":58,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["dependencies",{"_index":155,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":137,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["entry",{"_index":171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["env",{"_index":206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.${process.env.node_env",{"_index":205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":61,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"miscellaneous/variables.html":{}}}],["error(error",{"_index":96,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["errorkey",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["errormessages",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errormessages.unexpected_error",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["exception",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["exception.getstatus",{"_index":84,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message",{"_index":86,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exceptionfactory",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["exceptionfilter",{"_index":53,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["executioncontext",{"_index":118,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["export",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["exports",{"_index":183,"title":{},"body":{"overview.html":{}}}],["express",{"_index":74,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/ResponseInterceptorService.html":{},"dependencies.html":{}}}],["false",{"_index":109,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{}}}],["filter.ts",{"_index":49,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["filter.ts:18",{"_index":64,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["filter.ts:9",{"_index":59,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["function",{"_index":93,"title":{},"body":{"classes/ResponseHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":169,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getenvfile",{"_index":142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":174,"title":{"index.html":{}},"body":{}}],["global",{"_index":51,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["globalexceptionfilter",{"_index":20,"title":{"classes/GlobalExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["graph",{"_index":177,"title":{},"body":{"modules.html":{}}}],["handler",{"_index":77,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{}}}],["handler.ts",{"_index":91,"title":{},"body":{"classes/ResponseHandler.html":{},"coverage.html":{}}}],["handler.ts:14",{"_index":104,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["handler.ts:31",{"_index":101,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":80,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpexception",{"_index":72,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpstatus",{"_index":73,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":89,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["identifier",{"_index":138,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":52,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/ResponseInterceptorService.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["imports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["injectable",{"_index":110,"title":{"injectables/ResponseInterceptorService.html":{}},"body":{"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["instanceof",{"_index":82,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["intercept",{"_index":116,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["intercept(context",{"_index":117,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["interceptor",{"_index":114,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["interceptor.service",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":113,"title":{},"body":{"injectables/ResponseInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:17",{"_index":121,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["json(responsehandler.error(exception.name",{"_index":88,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["legend",{"_index":181,"title":{},"body":{"overview.html":{}}}],["license",{"_index":192,"title":{},"body":{"properties.html":{}}}],["map",{"_index":127,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["map((sentresponse",{"_index":132,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["matching",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":98,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["messages",{"_index":204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":55,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["miscellaneous",{"_index":168,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["name",{"_index":68,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["nest",{"_index":172,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestinterceptor",{"_index":126,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/ResponseInterceptorService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["next",{"_index":119,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["next.handle().pipe",{"_index":131,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["number",{"_index":100,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["object",{"_index":198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(validationerrors[0].constraints)[0",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["observable",{"_index":124,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["optional",{"_index":70,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["out",{"_index":186,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":180,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":154,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":78,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["promise",{"_index":125,"title":{},"body":{"injectables/ResponseInterceptorService.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":189,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provide",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":115,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":107,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["reflect",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":185,"title":{},"body":{"overview.html":{}}}],["response",{"_index":66,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["response.status(sentresponse.statuscode",{"_index":134,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["response.status(statuscode).json(responsehandler.error(exception.name",{"_index":85,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["responsehandler",{"_index":75,"title":{"classes/ResponseHandler.html":{}},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"coverage.html":{}}}],["responseinterceptorservice",{"_index":17,"title":{"injectables/ResponseInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{}}}],["results",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"injectables/ResponseInterceptorService.html":{},"dependencies.html":{}}}],["sentresponse",{"_index":135,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["sentresponse?.status",{"_index":133,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["src/.../environments.config.ts",{"_index":197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../messages.config.ts",{"_index":196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":6,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/configs/environments.config.ts",{"_index":140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/configs/messages.config.ts",{"_index":145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/global",{"_index":48,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":112,"title":{},"body":{"injectables/ResponseInterceptorService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":149,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/response",{"_index":90,"title":{},"body":{"classes/ResponseHandler.html":{},"coverage.html":{}}}],["started",{"_index":175,"title":{"index.html":{}},"body":{}}],["statements",{"_index":139,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":94,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["status",{"_index":108,"title":{},"body":{"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{}}}],["status(httpstatus.bad_request",{"_index":87,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["statuscode",{"_index":83,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{}}}],["string",{"_index":99,"title":{},"body":{"classes/ResponseHandler.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":95,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["success(data",{"_index":103,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["t",{"_index":97,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["table",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["true",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/ResponseHandler.html":{}}}],["type",{"_index":69,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ResponseHandler.html":{},"injectables/ResponseInterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":129,"title":{},"body":{"injectables/ResponseInterceptorService.html":{}}}],["unexpected",{"_index":202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpected_error",{"_index":201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":193,"title":{},"body":{"properties.html":{}}}],["useclass",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["utility",{"_index":92,"title":{},"body":{"classes/ResponseHandler.html":{}}}],["utils/response",{"_index":76,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["validationerror",{"_index":10,"title":{},"body":{"modules/AppModule.html":{}}}],["validationerrors",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["validationerrors[0].constraints[`${errorkey",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":141,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":195,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":190,"title":{},"body":{"properties.html":{}}}],["whitelist",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":184,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Module, ValidationError, ValidationPipe } from '@nestjs/common';\nimport { APP_FILTER, APP_INTERCEPTOR, APP_PIPE } from '@nestjs/core';\nimport { ResponseInterceptorService } from './common/interceptors/response-interceptor.service';\nimport { GlobalExceptionFilter } from './common/global-exception-filter';\nimport { errorMessages } from './common/configs/messages.config';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: GlobalExceptionFilter,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: ResponseInterceptorService,\n    },\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        whitelist: true,\n        exceptionFactory: (validationErrors: ValidationError[] = []): BadRequestException => {\n          const errorKey = Object.keys(validationErrors[0].constraints)[0];\n          return new BadRequestException(\n            validationErrors[0].constraints[`${errorKey}`] || errorMessages.UNEXPECTED_ERROR,\n          );\n        },\n      }),\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalExceptionFilter.html":{"url":"classes/GlobalExceptionFilter.html","title":"class - GlobalExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/global-exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Global Exception Filter\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/global-exception-filter.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/global-exception-filter.ts:18\n                        \n                    \n\n\n            \n                \n                        Description - Catch Exception And Return Common Error Response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { ResponseHandler } from '../utils/response-handler';\n\n/**\n * Global Exception Filter\n */\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n  constructor() {}\n\n  /**\n   * Description - Catch Exception And Return Common Error Response\n   * @param exception\n   * @param host\n   * @returns\n   */\n  catch(exception: Error, host: ArgumentsHost): Response {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    if (exception instanceof HttpException) {\n      const statusCode = exception.getStatus();\n      return response.status(statusCode).json(ResponseHandler.error(exception.name, exception.message, statusCode));\n    }\n    return response\n      .status(HttpStatus.BAD_REQUEST)\n      .json(ResponseHandler.error(exception.name, exception.message, HttpStatus.BAD_REQUEST));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseHandler.html":{"url":"classes/ResponseHandler.html","title":"class - ResponseHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/response-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Description -Response Handler Utility Function\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(error: T, message: string | string[], statusCode: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/response-handler.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Description - Handler for Error Response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        string | string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CommonResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        success\n                        \n                    \n                \n            \n            \n                \n                        \n                    success(data: T, message: string | string[], statusCode: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/response-handler.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Description - Handler for Success Response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        string | string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CommonResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommonResponse } from '../common/types';\n\n/**\n * Description -Response Handler Utility Function\n */\nexport class ResponseHandler {\n  /**\n   * Description - Handler for Success Response\n   * @param data\n   * @param message\n   * @param statusCode\n   * @returns\n   */\n  public static success(data: T, message: string | string[], statusCode: number): CommonResponse {\n    return {\n      status: true,\n      statusCode,\n      message,\n      data: data || [],\n      error: [],\n    };\n  }\n\n  /**\n   * Description - Handler for Error Response\n   * @param error\n   * @param message\n   * @param statusCode\n   * @returns\n   */\n  public static error(error: T, message: string | string[], statusCode: number): CommonResponse {\n    return {\n      status: false,\n      statusCode,\n      message,\n      data: [],\n      error,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptorService.html":{"url":"injectables/ResponseInterceptorService.html","title":"injectable - ResponseInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Description - Response Interceptor provider\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/response-interceptor.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Description - Change Status of Response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                Common Response\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable, map } from 'rxjs';\nimport { Response } from 'express';\nimport { CommonResponse } from '../types';\n\n/**\n * Description - Response Interceptor provider\n */\n@Injectable()\nexport class ResponseInterceptorService implements NestInterceptor {\n  /**\n   * Description - Change Status of Response\n   * @param context\n   * @param next\n   * @returns Common Response\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n    const response = context.switchToHttp().getResponse();\n\n    return next.handle().pipe(\n      map((sentResponse: CommonResponse) => {\n        if (sentResponse?.status) {\n          response.status(sentResponse.statusCode);\n        }\n        return sentResponse;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/configs/environments.config.ts\n            \n            variable\n            getEnvFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/configs/messages.config.ts\n            \n            variable\n            errorMessages\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/global-exception-filter.ts\n            \n            class\n            GlobalExceptionFilter\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.service.ts\n            \n            injectable\n            ResponseInterceptorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/response-handler.ts\n            \n            class\n            ResponseHandler\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.0\n        \n            @nestjs/core : ^10.3.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            reflect-metadata : ^0.1.14\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Description - Entry File Of Nest Application\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNest-Boilerplate\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            errorMessages   (src/.../messages.config.ts)\n                        \n                        \n                            getEnvFile   (src/.../environments.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/configs/messages.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  UNEXPECTED_ERROR: 'Unexpected Error',\n}\n                    \n                \n\n            \n                \n                    Description - Constant Error Messages\n\n                \n            \n\n        \n    \n\n    src/common/configs/environments.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEnvFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => `.env.${process.env.NODE_ENV}`\n                    \n                \n\n            \n                \n                    Description - Get env file common function\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
